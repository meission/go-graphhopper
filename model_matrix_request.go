/*
GraphHopper Directions API

 Integrate A-to-B route planning, turn-by-turn navigation, route optimization, isochrone calculations, location clustering and other tools into your application.    ##### Authentication      1. [Sign up for GraphHopper](https://graphhopper.com/dashboard/#/signup)   2. [Create an API key](https://support.graphhopper.com/a/solutions/articles/44001976027)    Authenticate to the API by passing your key as a query parameter in every request.    ##### API Explorer    You can also try all API parts without registration in our [API explorer](https://explorer.graphhopper.com/).    ##### Client Libraries    To speed up development and make coding easier, we offer a [JavaScript client](https://github.com/graphhopper/directions-api-js-client) and a   [Java client](https://github.com/graphhopper/graphhopper/tree/master/client-hc).    ##### Optimize Response Speed    1. Reuse SSL/TLS sessions    You should utilize the SSL session to speed up responses after the initial response or use a library that does this. E.g. for Java the   [OkHttp library](https://square.github.io/okhttp/) automatically reuses SSL/TLS sessions and also the browser takes care of this automatically.   For python you can use the [`requests` library](https://requests.readthedocs.io/en/latest/user/advanced/): first you create a   session (`session = requests.Session()`) and then do requests only with this session instead of directly using \"requests\".    2. Bandwidth reduction    If you create your own client, make sure it supports http/2 and gzipped responses for best speed.   If you use the Matrix, the Route Optimization API or the  and want to solve large problems, we recommend you to reduce bandwidth   by [compressing your POST request](https://gist.github.com/karussell/82851e303ea7b3459b2dea01f18949f4) and specifying the header   as follows: `Content-Encoding: gzip`. This will also avoid the HTTP 413 error \"Request Entity Too Large\". 

API version: 1.0.0
Contact: support@graphhopper.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MatrixRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MatrixRequest{}

// MatrixRequest struct for MatrixRequest
type MatrixRequest struct {
	// The routing profile. It determines the network, speed and other physical attributes used when computing the route. See the section about [routing profiles](#tag/Map-Data-and-Routing-Profiles) for more details and valid profile values.
	Profile *string `json:"profile,omitempty"`
	// The origin points for the routes in an array of `[longitude,latitude]`.
	FromPoints [][]float64 `json:"from_points,omitempty"`
	// The destination points for the routes in an array of `[longitude,latitude]`.
	ToPoints [][]float64 `json:"to_points,omitempty"`
	// See `point_hints`of symmetrical matrix
	FromPointHints []string `json:"from_point_hints,omitempty"`
	// See `point_hints`of symmetrical matrix
	ToPointHints []string `json:"to_point_hints,omitempty"`
	// See `snap_preventions` of symmetrical matrix
	SnapPreventions []string `json:"snap_preventions,omitempty"`
	// See `curbsides`of symmetrical matrix
	FromCurbsides []string `json:"from_curbsides,omitempty"`
	// See `curbsides`of symmetrical matrix
	ToCurbsides []string `json:"to_curbsides,omitempty"`
	// Specifies which matrices should be included in the response. Specify one or more of the following options `weights`, `times`, `distances`. The units of the entries of `distances` are meters, of `times` are seconds and of `weights` is arbitrary and it can differ for different vehicles or versions of this API.
	OutArrays []string `json:"out_arrays,omitempty"`
	// Specifies whether or not the matrix calculation should return with an error as soon as possible in case some points cannot be found or some points are not connected. If set to `false` the time/weight/distance matrix will be calculated for all valid points and contain the `null` value for all entries that could not be calculated. The `hint` field of the response will also contain additional information about what went wrong (see its documentation).
	FailFast *bool `json:"fail_fast,omitempty"`
}

// NewMatrixRequest instantiates a new MatrixRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMatrixRequest() *MatrixRequest {
	this := MatrixRequest{}
	var profile string = "car"
	this.Profile = &profile
	var failFast bool = true
	this.FailFast = &failFast
	return &this
}

// NewMatrixRequestWithDefaults instantiates a new MatrixRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMatrixRequestWithDefaults() *MatrixRequest {
	this := MatrixRequest{}
	var profile string = "car"
	this.Profile = &profile
	var failFast bool = true
	this.FailFast = &failFast
	return &this
}

// GetProfile returns the Profile field value if set, zero value otherwise.
func (o *MatrixRequest) GetProfile() string {
	if o == nil || IsNil(o.Profile) {
		var ret string
		return ret
	}
	return *o.Profile
}

// GetProfileOk returns a tuple with the Profile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MatrixRequest) GetProfileOk() (*string, bool) {
	if o == nil || IsNil(o.Profile) {
		return nil, false
	}
	return o.Profile, true
}

// HasProfile returns a boolean if a field has been set.
func (o *MatrixRequest) HasProfile() bool {
	if o != nil && !IsNil(o.Profile) {
		return true
	}

	return false
}

// SetProfile gets a reference to the given string and assigns it to the Profile field.
func (o *MatrixRequest) SetProfile(v string) {
	o.Profile = &v
}

// GetFromPoints returns the FromPoints field value if set, zero value otherwise.
func (o *MatrixRequest) GetFromPoints() [][]float64 {
	if o == nil || IsNil(o.FromPoints) {
		var ret [][]float64
		return ret
	}
	return o.FromPoints
}

// GetFromPointsOk returns a tuple with the FromPoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MatrixRequest) GetFromPointsOk() ([][]float64, bool) {
	if o == nil || IsNil(o.FromPoints) {
		return nil, false
	}
	return o.FromPoints, true
}

// HasFromPoints returns a boolean if a field has been set.
func (o *MatrixRequest) HasFromPoints() bool {
	if o != nil && !IsNil(o.FromPoints) {
		return true
	}

	return false
}

// SetFromPoints gets a reference to the given [][]float64 and assigns it to the FromPoints field.
func (o *MatrixRequest) SetFromPoints(v [][]float64) {
	o.FromPoints = v
}

// GetToPoints returns the ToPoints field value if set, zero value otherwise.
func (o *MatrixRequest) GetToPoints() [][]float64 {
	if o == nil || IsNil(o.ToPoints) {
		var ret [][]float64
		return ret
	}
	return o.ToPoints
}

// GetToPointsOk returns a tuple with the ToPoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MatrixRequest) GetToPointsOk() ([][]float64, bool) {
	if o == nil || IsNil(o.ToPoints) {
		return nil, false
	}
	return o.ToPoints, true
}

// HasToPoints returns a boolean if a field has been set.
func (o *MatrixRequest) HasToPoints() bool {
	if o != nil && !IsNil(o.ToPoints) {
		return true
	}

	return false
}

// SetToPoints gets a reference to the given [][]float64 and assigns it to the ToPoints field.
func (o *MatrixRequest) SetToPoints(v [][]float64) {
	o.ToPoints = v
}

// GetFromPointHints returns the FromPointHints field value if set, zero value otherwise.
func (o *MatrixRequest) GetFromPointHints() []string {
	if o == nil || IsNil(o.FromPointHints) {
		var ret []string
		return ret
	}
	return o.FromPointHints
}

// GetFromPointHintsOk returns a tuple with the FromPointHints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MatrixRequest) GetFromPointHintsOk() ([]string, bool) {
	if o == nil || IsNil(o.FromPointHints) {
		return nil, false
	}
	return o.FromPointHints, true
}

// HasFromPointHints returns a boolean if a field has been set.
func (o *MatrixRequest) HasFromPointHints() bool {
	if o != nil && !IsNil(o.FromPointHints) {
		return true
	}

	return false
}

// SetFromPointHints gets a reference to the given []string and assigns it to the FromPointHints field.
func (o *MatrixRequest) SetFromPointHints(v []string) {
	o.FromPointHints = v
}

// GetToPointHints returns the ToPointHints field value if set, zero value otherwise.
func (o *MatrixRequest) GetToPointHints() []string {
	if o == nil || IsNil(o.ToPointHints) {
		var ret []string
		return ret
	}
	return o.ToPointHints
}

// GetToPointHintsOk returns a tuple with the ToPointHints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MatrixRequest) GetToPointHintsOk() ([]string, bool) {
	if o == nil || IsNil(o.ToPointHints) {
		return nil, false
	}
	return o.ToPointHints, true
}

// HasToPointHints returns a boolean if a field has been set.
func (o *MatrixRequest) HasToPointHints() bool {
	if o != nil && !IsNil(o.ToPointHints) {
		return true
	}

	return false
}

// SetToPointHints gets a reference to the given []string and assigns it to the ToPointHints field.
func (o *MatrixRequest) SetToPointHints(v []string) {
	o.ToPointHints = v
}

// GetSnapPreventions returns the SnapPreventions field value if set, zero value otherwise.
func (o *MatrixRequest) GetSnapPreventions() []string {
	if o == nil || IsNil(o.SnapPreventions) {
		var ret []string
		return ret
	}
	return o.SnapPreventions
}

// GetSnapPreventionsOk returns a tuple with the SnapPreventions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MatrixRequest) GetSnapPreventionsOk() ([]string, bool) {
	if o == nil || IsNil(o.SnapPreventions) {
		return nil, false
	}
	return o.SnapPreventions, true
}

// HasSnapPreventions returns a boolean if a field has been set.
func (o *MatrixRequest) HasSnapPreventions() bool {
	if o != nil && !IsNil(o.SnapPreventions) {
		return true
	}

	return false
}

// SetSnapPreventions gets a reference to the given []string and assigns it to the SnapPreventions field.
func (o *MatrixRequest) SetSnapPreventions(v []string) {
	o.SnapPreventions = v
}

// GetFromCurbsides returns the FromCurbsides field value if set, zero value otherwise.
func (o *MatrixRequest) GetFromCurbsides() []string {
	if o == nil || IsNil(o.FromCurbsides) {
		var ret []string
		return ret
	}
	return o.FromCurbsides
}

// GetFromCurbsidesOk returns a tuple with the FromCurbsides field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MatrixRequest) GetFromCurbsidesOk() ([]string, bool) {
	if o == nil || IsNil(o.FromCurbsides) {
		return nil, false
	}
	return o.FromCurbsides, true
}

// HasFromCurbsides returns a boolean if a field has been set.
func (o *MatrixRequest) HasFromCurbsides() bool {
	if o != nil && !IsNil(o.FromCurbsides) {
		return true
	}

	return false
}

// SetFromCurbsides gets a reference to the given []string and assigns it to the FromCurbsides field.
func (o *MatrixRequest) SetFromCurbsides(v []string) {
	o.FromCurbsides = v
}

// GetToCurbsides returns the ToCurbsides field value if set, zero value otherwise.
func (o *MatrixRequest) GetToCurbsides() []string {
	if o == nil || IsNil(o.ToCurbsides) {
		var ret []string
		return ret
	}
	return o.ToCurbsides
}

// GetToCurbsidesOk returns a tuple with the ToCurbsides field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MatrixRequest) GetToCurbsidesOk() ([]string, bool) {
	if o == nil || IsNil(o.ToCurbsides) {
		return nil, false
	}
	return o.ToCurbsides, true
}

// HasToCurbsides returns a boolean if a field has been set.
func (o *MatrixRequest) HasToCurbsides() bool {
	if o != nil && !IsNil(o.ToCurbsides) {
		return true
	}

	return false
}

// SetToCurbsides gets a reference to the given []string and assigns it to the ToCurbsides field.
func (o *MatrixRequest) SetToCurbsides(v []string) {
	o.ToCurbsides = v
}

// GetOutArrays returns the OutArrays field value if set, zero value otherwise.
func (o *MatrixRequest) GetOutArrays() []string {
	if o == nil || IsNil(o.OutArrays) {
		var ret []string
		return ret
	}
	return o.OutArrays
}

// GetOutArraysOk returns a tuple with the OutArrays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MatrixRequest) GetOutArraysOk() ([]string, bool) {
	if o == nil || IsNil(o.OutArrays) {
		return nil, false
	}
	return o.OutArrays, true
}

// HasOutArrays returns a boolean if a field has been set.
func (o *MatrixRequest) HasOutArrays() bool {
	if o != nil && !IsNil(o.OutArrays) {
		return true
	}

	return false
}

// SetOutArrays gets a reference to the given []string and assigns it to the OutArrays field.
func (o *MatrixRequest) SetOutArrays(v []string) {
	o.OutArrays = v
}

// GetFailFast returns the FailFast field value if set, zero value otherwise.
func (o *MatrixRequest) GetFailFast() bool {
	if o == nil || IsNil(o.FailFast) {
		var ret bool
		return ret
	}
	return *o.FailFast
}

// GetFailFastOk returns a tuple with the FailFast field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MatrixRequest) GetFailFastOk() (*bool, bool) {
	if o == nil || IsNil(o.FailFast) {
		return nil, false
	}
	return o.FailFast, true
}

// HasFailFast returns a boolean if a field has been set.
func (o *MatrixRequest) HasFailFast() bool {
	if o != nil && !IsNil(o.FailFast) {
		return true
	}

	return false
}

// SetFailFast gets a reference to the given bool and assigns it to the FailFast field.
func (o *MatrixRequest) SetFailFast(v bool) {
	o.FailFast = &v
}

func (o MatrixRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MatrixRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Profile) {
		toSerialize["profile"] = o.Profile
	}
	if !IsNil(o.FromPoints) {
		toSerialize["from_points"] = o.FromPoints
	}
	if !IsNil(o.ToPoints) {
		toSerialize["to_points"] = o.ToPoints
	}
	if !IsNil(o.FromPointHints) {
		toSerialize["from_point_hints"] = o.FromPointHints
	}
	if !IsNil(o.ToPointHints) {
		toSerialize["to_point_hints"] = o.ToPointHints
	}
	if !IsNil(o.SnapPreventions) {
		toSerialize["snap_preventions"] = o.SnapPreventions
	}
	if !IsNil(o.FromCurbsides) {
		toSerialize["from_curbsides"] = o.FromCurbsides
	}
	if !IsNil(o.ToCurbsides) {
		toSerialize["to_curbsides"] = o.ToCurbsides
	}
	if !IsNil(o.OutArrays) {
		toSerialize["out_arrays"] = o.OutArrays
	}
	if !IsNil(o.FailFast) {
		toSerialize["fail_fast"] = o.FailFast
	}
	return toSerialize, nil
}

type NullableMatrixRequest struct {
	value *MatrixRequest
	isSet bool
}

func (v NullableMatrixRequest) Get() *MatrixRequest {
	return v.value
}

func (v *NullableMatrixRequest) Set(val *MatrixRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMatrixRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMatrixRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMatrixRequest(val *MatrixRequest) *NullableMatrixRequest {
	return &NullableMatrixRequest{value: val, isSet: true}
}

func (v NullableMatrixRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMatrixRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


