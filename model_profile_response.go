/*
GraphHopper Directions API

 Integrate A-to-B route planning, turn-by-turn navigation, route optimization, isochrone calculations, location clustering and other tools into your application.    ##### Authentication      1. [Sign up for GraphHopper](https://graphhopper.com/dashboard/#/signup)   2. [Create an API key](https://support.graphhopper.com/a/solutions/articles/44001976027)    Authenticate to the API by passing your key as a query parameter in every request.    ##### API Explorer    You can also try all API parts without registration in our [API explorer](https://explorer.graphhopper.com/).    ##### Client Libraries    To speed up development and make coding easier, we offer a [JavaScript client](https://github.com/graphhopper/directions-api-js-client) and a   [Java client](https://github.com/graphhopper/graphhopper/tree/master/client-hc).    ##### Optimize Response Speed    1. Reuse SSL/TLS sessions    You should utilize the SSL session to speed up responses after the initial response or use a library that does this. E.g. for Java the   [OkHttp library](https://square.github.io/okhttp/) automatically reuses SSL/TLS sessions and also the browser takes care of this automatically.   For python you can use the [`requests` library](https://requests.readthedocs.io/en/latest/user/advanced/): first you create a   session (`session = requests.Session()`) and then do requests only with this session instead of directly using \"requests\".    2. Bandwidth reduction    If you create your own client, make sure it supports http/2 and gzipped responses for best speed.   If you use the Matrix, the Route Optimization API or the  and want to solve large problems, we recommend you to reduce bandwidth   by [compressing your POST request](https://gist.github.com/karussell/82851e303ea7b3459b2dea01f18949f4) and specifying the header   as follows: `Content-Encoding: gzip`. This will also avoid the HTTP 413 error \"Request Entity Too Large\". 

API version: 1.0.0
Contact: support@graphhopper.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ProfileResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProfileResponse{}

// ProfileResponse struct for ProfileResponse
type ProfileResponse struct {
	// The built-in profile this custom profile is based on.
	Profile *string `json:"profile,omitempty"`
	Bounds *ProfileResponseBounds `json:"bounds,omitempty"`
	CustomModel *CustomModelForProfile `json:"custom_model,omitempty"`
	// The name of the created profile. Use this as the `profile` parameter for the /route API etc. For route optimization requests you need to define a vehicle_type where you can enter the custom profile.
	Id *string `json:"id,omitempty"`
}

// NewProfileResponse instantiates a new ProfileResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProfileResponse() *ProfileResponse {
	this := ProfileResponse{}
	return &this
}

// NewProfileResponseWithDefaults instantiates a new ProfileResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProfileResponseWithDefaults() *ProfileResponse {
	this := ProfileResponse{}
	return &this
}

// GetProfile returns the Profile field value if set, zero value otherwise.
func (o *ProfileResponse) GetProfile() string {
	if o == nil || IsNil(o.Profile) {
		var ret string
		return ret
	}
	return *o.Profile
}

// GetProfileOk returns a tuple with the Profile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileResponse) GetProfileOk() (*string, bool) {
	if o == nil || IsNil(o.Profile) {
		return nil, false
	}
	return o.Profile, true
}

// HasProfile returns a boolean if a field has been set.
func (o *ProfileResponse) HasProfile() bool {
	if o != nil && !IsNil(o.Profile) {
		return true
	}

	return false
}

// SetProfile gets a reference to the given string and assigns it to the Profile field.
func (o *ProfileResponse) SetProfile(v string) {
	o.Profile = &v
}

// GetBounds returns the Bounds field value if set, zero value otherwise.
func (o *ProfileResponse) GetBounds() ProfileResponseBounds {
	if o == nil || IsNil(o.Bounds) {
		var ret ProfileResponseBounds
		return ret
	}
	return *o.Bounds
}

// GetBoundsOk returns a tuple with the Bounds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileResponse) GetBoundsOk() (*ProfileResponseBounds, bool) {
	if o == nil || IsNil(o.Bounds) {
		return nil, false
	}
	return o.Bounds, true
}

// HasBounds returns a boolean if a field has been set.
func (o *ProfileResponse) HasBounds() bool {
	if o != nil && !IsNil(o.Bounds) {
		return true
	}

	return false
}

// SetBounds gets a reference to the given ProfileResponseBounds and assigns it to the Bounds field.
func (o *ProfileResponse) SetBounds(v ProfileResponseBounds) {
	o.Bounds = &v
}

// GetCustomModel returns the CustomModel field value if set, zero value otherwise.
func (o *ProfileResponse) GetCustomModel() CustomModelForProfile {
	if o == nil || IsNil(o.CustomModel) {
		var ret CustomModelForProfile
		return ret
	}
	return *o.CustomModel
}

// GetCustomModelOk returns a tuple with the CustomModel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileResponse) GetCustomModelOk() (*CustomModelForProfile, bool) {
	if o == nil || IsNil(o.CustomModel) {
		return nil, false
	}
	return o.CustomModel, true
}

// HasCustomModel returns a boolean if a field has been set.
func (o *ProfileResponse) HasCustomModel() bool {
	if o != nil && !IsNil(o.CustomModel) {
		return true
	}

	return false
}

// SetCustomModel gets a reference to the given CustomModelForProfile and assigns it to the CustomModel field.
func (o *ProfileResponse) SetCustomModel(v CustomModelForProfile) {
	o.CustomModel = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ProfileResponse) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileResponse) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ProfileResponse) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ProfileResponse) SetId(v string) {
	o.Id = &v
}

func (o ProfileResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProfileResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Profile) {
		toSerialize["profile"] = o.Profile
	}
	if !IsNil(o.Bounds) {
		toSerialize["bounds"] = o.Bounds
	}
	if !IsNil(o.CustomModel) {
		toSerialize["custom_model"] = o.CustomModel
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	return toSerialize, nil
}

type NullableProfileResponse struct {
	value *ProfileResponse
	isSet bool
}

func (v NullableProfileResponse) Get() *ProfileResponse {
	return v.value
}

func (v *NullableProfileResponse) Set(val *ProfileResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableProfileResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableProfileResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProfileResponse(val *ProfileResponse) *NullableProfileResponse {
	return &NullableProfileResponse{value: val, isSet: true}
}

func (v NullableProfileResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProfileResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


